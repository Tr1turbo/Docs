import{_ as a,c as t,a1 as r,o}from"./chunks/framework.BDxlaA_J.js";const n="/qpc_eyelid.png",u=JSON.parse('{"title":"Quantization Parameters Creator","description":"","frontmatter":{},"headers":[],"relativePath":"face-tracking-addon/quantization-parameters-creator.md","filePath":"face-tracking-addon/quantization-parameters-creator.md"}'),i={name:"face-tracking-addon/quantization-parameters-creator.md"};function s(c,e,m,d,l,p){return o(),t("div",null,e[0]||(e[0]=[r('<h1 id="quantization-parameters-creator" tabindex="-1">Quantization Parameters Creator <a class="header-anchor" href="#quantization-parameters-creator" aria-label="Permalink to &quot;Quantization Parameters Creator&quot;">​</a></h1><p>Quantization Parmetars Creator is a non-destructive tool that create binary parameter to reduce sync parameters.</p><p><a href="https://docs.vrcft.io/docs/tutorial-avatars/tutorial-avatars-extras/parameters/types/binary" target="_blank" rel="noreferrer"><strong>Binary Parameters</strong></a> refers to a parameter system that <a href="https://docs.vrcft.io/" target="_blank" rel="noreferrer">VRCFaceTracking</a> uses to send tracking data through a collection of <strong>Bool</strong> parameters that represent a float parameter.</p><p><img src="'+n+'" alt="EyeLid"></p><h2 id="resolution-settings" tabindex="-1">Resolution Settings <a class="header-anchor" href="#resolution-settings" aria-label="Permalink to &quot;Resolution Settings&quot;">​</a></h2><p>Users can set the resolution for each parameter. Higher resolution requires more sync parameters. The number of required sync parameters can be viewed in the <code>Parameters: {num} bits</code> section⁠⁠.</p><h2 id="combined-parameters" tabindex="-1">Combined Parameters <a class="header-anchor" href="#combined-parameters" aria-label="Permalink to &quot;Combined Parameters&quot;">​</a></h2><p>Some parameters have <code>Combined Remote</code> and <code>Combined Local</code> options, indicating that these parameters can be merged for simplification. For example, <em>EyeLidLeft</em> and <em>EyeLidRight</em> can be combined into <em>EyeLid</em>, with its value being the average of <em>EyeLidLeft</em> and <em>EyeLidRight</em>⁠.</p><ul><li><strong>Combined Remote:</strong> Only combines parameters remotely. Selecting this option can halve the sync parameter requirements⁠.</li><li><strong>Combined Local:</strong> Only combines parameters locally. Selecting this option does not affect sync parameter requirements⁠.</li></ul><h2 id="scale-factor" tabindex="-1">Scale Factor <a class="header-anchor" href="#scale-factor" aria-label="Permalink to &quot;Scale Factor&quot;">​</a></h2><p>Scale Factor can be used to adjust parameter values according to user needs. For example, if a user feels that the eyes don&#39;t open wide enough, they can increase the Scale Factor for EyeLidLeft and EyeLidRight⁠.</p>',11)]))}const f=a(i,[["render",s]]);export{u as __pageData,f as default};
